//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitorDTO", Namespace="http://schemas.datacontract.org/2004/07/EX.Model.DTO")]
    [System.SerializableAttribute()]
    public partial class VisitorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Column9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column1 {
            get {
                return this.Column1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column1Field, value) != true)) {
                    this.Column1Field = value;
                    this.RaisePropertyChanged("Column1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column10 {
            get {
                return this.Column10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column10Field, value) != true)) {
                    this.Column10Field = value;
                    this.RaisePropertyChanged("Column10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column11 {
            get {
                return this.Column11Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column11Field, value) != true)) {
                    this.Column11Field = value;
                    this.RaisePropertyChanged("Column11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column12 {
            get {
                return this.Column12Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column12Field, value) != true)) {
                    this.Column12Field = value;
                    this.RaisePropertyChanged("Column12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column13 {
            get {
                return this.Column13Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column13Field, value) != true)) {
                    this.Column13Field = value;
                    this.RaisePropertyChanged("Column13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column14 {
            get {
                return this.Column14Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column14Field, value) != true)) {
                    this.Column14Field = value;
                    this.RaisePropertyChanged("Column14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column15 {
            get {
                return this.Column15Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column15Field, value) != true)) {
                    this.Column15Field = value;
                    this.RaisePropertyChanged("Column15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column2 {
            get {
                return this.Column2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column2Field, value) != true)) {
                    this.Column2Field = value;
                    this.RaisePropertyChanged("Column2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column3 {
            get {
                return this.Column3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column3Field, value) != true)) {
                    this.Column3Field = value;
                    this.RaisePropertyChanged("Column3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column4 {
            get {
                return this.Column4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column4Field, value) != true)) {
                    this.Column4Field = value;
                    this.RaisePropertyChanged("Column4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column5 {
            get {
                return this.Column5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column5Field, value) != true)) {
                    this.Column5Field = value;
                    this.RaisePropertyChanged("Column5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column6 {
            get {
                return this.Column6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column6Field, value) != true)) {
                    this.Column6Field = value;
                    this.RaisePropertyChanged("Column6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column7 {
            get {
                return this.Column7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column7Field, value) != true)) {
                    this.Column7Field = value;
                    this.RaisePropertyChanged("Column7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column8 {
            get {
                return this.Column8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column8Field, value) != true)) {
                    this.Column8Field = value;
                    this.RaisePropertyChanged("Column8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Column9 {
            get {
                return this.Column9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Column9Field, value) != true)) {
                    this.Column9Field = value;
                    this.RaisePropertyChanged("Column9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IVisitorContract")]
    public interface IVisitorContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetAllVisitors", ReplyAction="http://tempuri.org/IVisitorContract/GetAllVisitorsResponse")]
        ConsoleApp1.ServiceReference1.VisitorDTO[] GetAllVisitors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetAllVisitors", ReplyAction="http://tempuri.org/IVisitorContract/GetAllVisitorsResponse")]
        System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.VisitorDTO[]> GetAllVisitorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetVisitorById", ReplyAction="http://tempuri.org/IVisitorContract/GetVisitorByIdResponse")]
        ConsoleApp1.ServiceReference1.VisitorDTO GetVisitorById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetVisitorById", ReplyAction="http://tempuri.org/IVisitorContract/GetVisitorByIdResponse")]
        System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.VisitorDTO> GetVisitorByIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/AddOrUpdateVisitor", ReplyAction="http://tempuri.org/IVisitorContract/AddOrUpdateVisitorResponse")]
        void AddOrUpdateVisitor(ConsoleApp1.ServiceReference1.VisitorDTO visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/AddOrUpdateVisitor", ReplyAction="http://tempuri.org/IVisitorContract/AddOrUpdateVisitorResponse")]
        System.Threading.Tasks.Task AddOrUpdateVisitorAsync(ConsoleApp1.ServiceReference1.VisitorDTO visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisitor", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisitorResponse")]
        void RemoveVisitor(ConsoleApp1.ServiceReference1.VisitorDTO visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisitor", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisitorResponse")]
        System.Threading.Tasks.Task RemoveVisitorAsync(ConsoleApp1.ServiceReference1.VisitorDTO visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisitorById", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisitorByIdResponse")]
        void RemoveVisitorById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisitorById", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisitorByIdResponse")]
        System.Threading.Tasks.Task RemoveVisitorByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVisitorContractChannel : ConsoleApp1.ServiceReference1.IVisitorContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VisitorContractClient : System.ServiceModel.ClientBase<ConsoleApp1.ServiceReference1.IVisitorContract>, ConsoleApp1.ServiceReference1.IVisitorContract {
        
        public VisitorContractClient() {
        }
        
        public VisitorContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VisitorContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisitorContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisitorContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleApp1.ServiceReference1.VisitorDTO[] GetAllVisitors() {
            return base.Channel.GetAllVisitors();
        }
        
        public System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.VisitorDTO[]> GetAllVisitorsAsync() {
            return base.Channel.GetAllVisitorsAsync();
        }
        
        public ConsoleApp1.ServiceReference1.VisitorDTO GetVisitorById(int Id) {
            return base.Channel.GetVisitorById(Id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApp1.ServiceReference1.VisitorDTO> GetVisitorByIdAsync(int Id) {
            return base.Channel.GetVisitorByIdAsync(Id);
        }
        
        public void AddOrUpdateVisitor(ConsoleApp1.ServiceReference1.VisitorDTO visitor) {
            base.Channel.AddOrUpdateVisitor(visitor);
        }
        
        public System.Threading.Tasks.Task AddOrUpdateVisitorAsync(ConsoleApp1.ServiceReference1.VisitorDTO visitor) {
            return base.Channel.AddOrUpdateVisitorAsync(visitor);
        }
        
        public void RemoveVisitor(ConsoleApp1.ServiceReference1.VisitorDTO visitor) {
            base.Channel.RemoveVisitor(visitor);
        }
        
        public System.Threading.Tasks.Task RemoveVisitorAsync(ConsoleApp1.ServiceReference1.VisitorDTO visitor) {
            return base.Channel.RemoveVisitorAsync(visitor);
        }
        
        public void RemoveVisitorById(int Id) {
            base.Channel.RemoveVisitorById(Id);
        }
        
        public System.Threading.Tasks.Task RemoveVisitorByIdAsync(int Id) {
            return base.Channel.RemoveVisitorByIdAsync(Id);
        }
    }
}
